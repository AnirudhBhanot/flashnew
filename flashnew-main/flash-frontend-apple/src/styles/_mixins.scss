// Apple Design System Mixins
// Reusable mixins for common patterns

// Card Shadows
@mixin card-shadow {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04), 0 0 0 1px rgba(0, 0, 0, 0.04);
  
  @media (prefers-color-scheme: dark) {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(255, 255, 255, 0.1);
  }
}

@mixin card-shadow-sm {
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.04), 0 0 0 1px rgba(0, 0, 0, 0.04);
  
  @media (prefers-color-scheme: dark) {
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(255, 255, 255, 0.1);
  }
}

@mixin card-shadow-lg {
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08), 0 0 0 1px rgba(0, 0, 0, 0.04);
  
  @media (prefers-color-scheme: dark) {
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.4), 0 0 0 1px rgba(255, 255, 255, 0.1);
  }
}

// Glass Effect
@mixin glass-effect {
  background: rgba(255, 255, 255, 0.72);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  
  @media (prefers-color-scheme: dark) {
    background: rgba(30, 30, 30, 0.72);
  }
}

// Focus States
@mixin focus-ring {
  outline: none;
  box-shadow: 0 0 0 3px rgba(0, 122, 255, 0.5);
}

@mixin focus-visible {
  &:focus-visible {
    @include focus-ring;
  }
}

// Hover States
@mixin hover-lift {
  transition: transform var(--transition-base), box-shadow var(--transition-base);
  
  &:hover {
    transform: translateY(-2px);
    @include card-shadow-lg;
  }
}

// Truncate Text
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Responsive Grid
@mixin responsive-grid($min-width: 250px, $gap: var(--spacing-md)) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
}

// Scrollbar Styles
@mixin custom-scrollbar {
  &::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
  
  &::-webkit-scrollbar-track {
    background: var(--background-secondary);
    border-radius: var(--radius-full);
  }
  
  &::-webkit-scrollbar-thumb {
    background: var(--text-quaternary);
    border-radius: var(--radius-full);
    
    &:hover {
      background: var(--text-tertiary);
    }
  }
}

// Button Base
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: var(--font-family-primary);
  font-weight: var(--font-weight-medium);
  border: none;
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: all var(--transition-base);
  text-decoration: none;
  user-select: none;
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  @include focus-visible;
}

// Container
@mixin container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 var(--spacing-xl);
  
  @media (max-width: $breakpoint-md) {
    padding: 0 var(--spacing-lg);
  }
}

// Aspect Ratio
@mixin aspect-ratio($width, $height) {
  position: relative;
  
  &::before {
    content: '';
    display: block;
    padding-bottom: percentage($height / $width);
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// Loading State
@mixin loading-skeleton {
  background: linear-gradient(
    90deg,
    var(--background-secondary) 25%,
    var(--background-tertiary) 50%,
    var(--background-secondary) 75%
  );
  background-size: 200% 100%;
  animation: loading 1.5s infinite;
}

@keyframes loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

// Button Styles
@mixin button-primary {
  @include button-base;
  background-color: var(--color-primary);
  color: white;
  padding: var(--spacing-md) var(--spacing-xl);
  font-size: var(--font-size-md);
  
  &:hover:not(:disabled) {
    background-color: var(--color-primary-dark);
    transform: translateY(-1px);
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: transparent;
  color: var(--color-primary);
  border: 1px solid var(--color-primary);
  padding: var(--spacing-md) var(--spacing-xl);
  font-size: var(--font-size-md);
  
  &:hover:not(:disabled) {
    background-color: var(--color-primary);
    color: white;
  }
}

// Input Base
@mixin input-base {
  width: 100%;
  padding: var(--spacing-md) var(--spacing-lg);
  font-family: var(--font-family-primary);
  font-size: var(--font-size-md);
  color: var(--text-primary);
  background-color: var(--background-primary);
  border: 1px solid var(--border-color-light);
  border-radius: var(--radius-md);
  transition: all var(--transition-base);
  
  &:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px rgba(0, 122, 255, 0.1);
  }
  
  &:disabled {
    background-color: var(--background-secondary);
    cursor: not-allowed;
    opacity: 0.6;
  }
  
  &::placeholder {
    color: var(--text-quaternary);
  }
}

// Breakpoint mixins
@mixin breakpoint-down($breakpoint) {
  @if $breakpoint == 'md' {
    @media (max-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == 'sm' {
    @media (max-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == 'lg' {
    @media (max-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == 'xl' {
    @media (max-width: $breakpoint-xl) {
      @content;
    }
  }
}

@mixin breakpoint-up($breakpoint) {
  @if $breakpoint == 'md' {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == 'sm' {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == 'lg' {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == 'xl' {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  }
}